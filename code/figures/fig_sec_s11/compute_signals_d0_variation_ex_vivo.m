% ========================================================================
% Compute signals for discrete radii for experimental ex-vivo dMRI protocol
% for various D0.
% ========================================================================

%% simulation
% set up parameters and protocol
sim_params = get_default_simulation_parameters();
tissue_params = jsondecode(fileread(...
    "../../../parameters/tissue_params_ex_vivo.json"));
mr_protocol = MrProtocol.fromJsonFile(....
    "../../../parameters/mr_protocol_ex_vivo_experimental.json");

d_0_step = 0.01;
d_0_bin_centers = 0:d_0_step:2.5;
d_0_bin_edges = [d_0_bin_centers - d_0_step/2, d_0_bin_centers(end) + d_0_step/2];

signal_per_r = zeros(length(d_0_bin_centers), ...
     sum(mr_protocol.num_gradient_directions_per_shell), ...
     length(sim_params.r_bin_centers));

for d_0_index = 1:length(d_0_bin_centers)

    fprintf("D_0: %04d/%04d\n", d_0_index, length(d_0_bin_centers));

    tissue_params_adjusted = tissue_params;
    tissue_params_adjusted.d_0 = d_0_bin_centers(d_0_index);

    % run simulations
    signal_per_r(d_0_index,:,:) = simulate_signals_single_axon( ...
        sim_params.r_bin_centers, ...
        mr_protocol, ...
        tissue_params_adjusted, ...
        "signal_approximation", "matrix");
end

r_bin_centers = sim_params.r_bin_centers;
r_bin_edges = sim_params.r_bin_edges;

save(fullfile(getenv("MRV_DATA_PATH"),...
    "simulations/signal_per_radius_ex_vivo_experimental_var_d0.mat"), ...
    "signal_per_r", ...
    "r_bin_centers", ...
    "r_bin_edges", ...
    "sim_params", ...
    "d_0_bin_centers", ...
    "d_0_bin_edges", ...
    "tissue_params", ...
    "mr_protocol");
