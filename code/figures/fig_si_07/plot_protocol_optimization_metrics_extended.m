% ========================================================================
% Plot in-vivo protocol optimization metrics for additional histology 
% scaling factors (used for tissue shrinkage compensation).
% ========================================================================


%% extract protocol metrics
opt = load(fullfile(getenv("MRV_DATA_PATH"), ...
    "simulations/protocol_optimization_rois.mat"));

% determine optimal R and corresponding NRMSE for each combination of
% g_max and SNR baseline level
g_max = unique(opt.results_table.g_max);
best_nrmse_percent = nan(length(opt.scaling_factors), ...
    length(opt.snr_factors), ...
    length(g_max));
best_R = nan(length(opt.scaling_factors), ...
    length(opt.snr_factors), ...
    length(g_max));

for scaling_factor_index = 1:length(opt.scaling_factors)
    for snr_baseline_index = 1:length(opt.snr_factors)   
        for g_max_index = 1:length(g_max)
            
            % find protocol candidates
            roi_idx = abs(opt.results_table.g_max ...
                - g_max(g_max_index)) < 1e-1...
                & abs(opt.results_table.scaling_factor ...
                - opt.scaling_factors(scaling_factor_index)) < 1e-3...
                & abs(opt.results_table.snr_factor ...
                - opt.snr_factors(snr_baseline_index)) < 1e-3 ...
                & opt.results_table.p <= inf;
            
            % determine protocol with highest R from candidates
            roi_table = opt.results_table(roi_idx,:);
            [~, best_roi_idx] = max(roi_table.R', [], 'omitnan');
            
            % store R and corresponding NRMSE value
            best_nrmse_percent(scaling_factor_index, ...
                snr_baseline_index, g_max_index) = ...
                roi_table.nrmse(best_roi_idx).*100.0;
            best_R(scaling_factor_index, ...
                snr_baseline_index, g_max_index) = ...
                roi_table.R(best_roi_idx);          
        end
    end
end


%% plot
fig_handle = figure;
set(fig_handle, get_default_figure_settings());
set(gcf,'units','centimeters','position',[0, 0, 18.4, 14.7]);

plot_axes = gobjects(2, length(opt.scaling_factors));
layout = tiledlayout(2, length(opt.scaling_factors), ...
    "TileSpacing","tight", ...
    "Padding", "compact");

scanner_names = ["state-of-the-art clinical scanner", ...
    "next-generation clinical scanner", ...
    "state-of-the-art research scanner", ...
    "next-generation research scanner"];
snr_ref_colors = 1./255.*[255, 102, 204; 0, 153, 153; 255, 165, 64];
snr_ref_linestyles = ["-", "--", ":"];
scanner_colors = repmat([1 1 1], length(opt.g_max_scanners), 1);
scanner_markers = ["o", "diamond", "v", "^"];
color_order = get_default_color_order();
snr_names = ["reference", ...
    "$75 \%$ increased", ...
    "$150 \%$ increased", "$\infty$"];
g_max_tick_vals = 0:100:600;

for scaling_factor_index = 1:length(opt.scaling_factors)
    plot_axes(1, scaling_factor_index) = nexttile(layout);
    hold on;

    for snr_baseline_index = 1:length(opt.snr_factors)
        % plot R versus g_max as line
        plot(g_max, squeeze(best_R( ...
            scaling_factor_index,snr_baseline_index,:)), ...
            '-', ...
            'LineWidth', 1, ...
            'Color', color_order(snr_baseline_index,:),...
            'DisplayName', sprintf("SNR baseline level: %s", ...
            snr_names(snr_baseline_index)), 'HandleVisibility', 'on');
    
        % plot R for existing scanners as markers on line
        for scanner_index = 1:length(opt.g_max_scanners)      
            g_max_index = find(g_max == opt.g_max_scanners(scanner_index));
    
            handle_visibility = "off";
            if snr_baseline_index == length(opt.snr_factors)
                handle_visibility = "on";
            end
               
            % plot scanner metric as uncolored markers
            plot(g_max(g_max_index), squeeze(best_R( ...
                scaling_factor_index,snr_baseline_index,g_max_index)), ...
                'o', ...
                'Color', 'k', ...
                'MarkerEdgeColor', 'k', ...
                'MarkerFaceColor', 'w', ...
                'Marker', scanner_markers(scanner_index),...
                'MarkerSize', 8, ...
                'DisplayName', ...
                sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                    scanner_names(scanner_index), ...
                    opt.g_max_scanners(scanner_index)),...
                'HandleVisibility', handle_visibility); 
        end
        xlabel("$g_{\mathrm{max}}$", 'Interpreter', 'latex');
        ylabel("$\mathrm{R}$", 'Interpreter', 'latex');
        pbaspect([1 1 1]);
        ytick_vals = 0:0.1:1;
        yticks(ytick_vals);
        ylim(minmax(ytick_vals));
        xticks(g_max_tick_vals);
        xlim(minmax(g_max_tick_vals));
        box on;
        title(sprintf("$\\eta = %.1f$", ...
            opt.scaling_factors(scaling_factor_index)), ...
            'Interpreter', 'latex', ...
            'FontSize', 12);
    end
end

for scaling_factor_index = 1:length(opt.scaling_factors)
    plot_axes(2, scaling_factor_index) = nexttile(layout);
    hold on;
    for snr_baseline_index = 1:length(opt.snr_factors)
    
        % plot NRMSE versus g_max as line
        plot(g_max, squeeze(best_nrmse_percent( ...
            scaling_factor_index,snr_baseline_index,:)), ...
            '-', ...
            'LineWidth', 1, ...
            'Color', color_order(snr_baseline_index,:),...
            'DisplayName', sprintf("SNR baseline level: %s", ...
            snr_names(snr_baseline_index)), 'HandleVisibility', 'on');
    
        % plot R for existing scanners as markers on line
        for scanner_index = 1:length(opt.g_max_scanners)      
            g_max_index = find(g_max == opt.g_max_scanners(scanner_index));
    
            handle_visibility = "off";
            if snr_baseline_index == length(opt.snr_factors)
                handle_visibility = "on";
            end
            
            % plot scanner metrics as uncolored markers
            plot(opt.g_max_scanners(scanner_index), ...
                squeeze(best_nrmse_percent( ...
                scaling_factor_index,snr_baseline_index,g_max_index)), ...
                'o', ...
                'Color', 'k', ...
                'MarkerEdgeColor', 'k', ...
                'MarkerFaceColor', 'w', ...
                'Marker', scanner_markers(scanner_index),...
                'MarkerSize', 8, ...
                'DisplayName', ...
                sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                    scanner_names(scanner_index), ...
                    opt.g_max_scanners(scanner_index)),...
                'HandleVisibility', handle_visibility); 
        end
        xlabel("$g_{\mathrm{max}}$", 'Interpreter', 'latex');
        ylabel("$\mathrm{NRMSE}~[\%]$", 'Interpreter', 'latex');
        pbaspect([1 1 1]);
        ytick_vals = 20:10:90;
        yticks(ytick_vals);
        ylim(minmax(ytick_vals));
        xticks(g_max_tick_vals);
        xlim(minmax(g_max_tick_vals));
        xlim([min(xticks()), max(xticks())]);
        box on;
    end

    
end

% add legend and subfigure labels
lgd = legend("NumColumns", 2, 'Interpreter','latex');
lgd.ItemTokenSize(1) = 15;
lgd.Layout.Tile = 'North';
add_subfigure_labels(plot_axes, "char", ...
    "position", [-0.23, 1.0]);

% save figure
print(gcf, '-dsvg', "protocol_optimization_metrics_extended.svg");
