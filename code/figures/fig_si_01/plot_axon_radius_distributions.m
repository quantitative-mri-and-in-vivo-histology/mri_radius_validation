% ========================================================================
% Plot axon radius distributions of corpus callosum subregions, using
% a segmentation into five subregions (genu, anterior midbody, midbody,
% posterior midbody, splenium)
% ========================================================================

% load data
r_bin_centers_org = readtable( ...
    fullfile(getenv("MRV_DATA_PATH"), ...
    "histology/rawdata/desc-binCenters_radii.tsv"), ...
    "FileType", "text", ...
    "Delimiter", "\t");
r_bin_centers_org = r_bin_centers_org.Variables;
r_bin_edges_org = readtable( ...
    fullfile(getenv("MRV_DATA_PATH"), ...
    "histology/rawdata/desc-binEdges_radii.tsv"), ...
    "FileType", "text", ...
    "Delimiter", "\t");
r_bin_edges_org = r_bin_edges_org.Variables;
r_bin_counts_org = readtable( ...
    fullfile(getenv("MRV_DATA_PATH"), ...
    "histology/rawdata/desc-countsCircularEq_radii.tsv"), ...
    "FileType", "text", ...
    "Delimiter", "\t");
r_bin_counts_org = r_bin_counts_org.Variables;
roi_info_table = readtable( ...
    fullfile(getenv("MRV_DATA_PATH"), ...
    "histology/rawdata/roiinfo.tsv"), ...
    "FileType", "text", ...
    "Delimiter", "\t", ...
    "TextType", "string");
subject_ids = unique(roi_info_table.subject_id);

% get radii per region, i.e., parcellartion of the corpus callosum into 
% genu, anterior midbody, midbody, posterior midbody, and splenium
r_bin_edges = 0:0.1:20;
r_bin_centers = r_bin_edges(1:end-1) ...
    + ((r_bin_edges(2:end) - r_bin_edges(1:end-1)) / 2);
region_id_prefixes = ["G", "AM", "M", "PM", "S"];
region_names = ["genu", ...
    "anterior midbody", ...
    "midbody", ...
    "posterior midbody", ...
    "splenium"];
region_radii = cell(length(region_names), length(subject_ids));
region_r_effs = zeros(length(region_names), length(subject_ids));
for region_id_prefix_index = 1:length(region_id_prefixes)
    for subject_index = 1:length(subject_ids)
        % get region_indices
        region_table_idx = startsWith(string(roi_info_table.roi_id), ...
            region_id_prefixes(region_id_prefix_index))...
            & roi_info_table.subject_id == subject_ids(subject_index);
        
        % pool distributions
        r_bin_counts = sum(r_bin_counts_org(region_table_idx,:),1);
        
        % get radii of the region
        region_radii{region_id_prefix_index, subject_index} = ...
            convert_bin_counts_to_set(r_bin_counts, r_bin_centers_org);

        % compute region effective radii
        region_r_effs(region_id_prefix_index, subject_index) = ...
            compute_r_eff_from_distribution( ...
            region_radii{region_id_prefix_index, subject_index});
    end
end

% Compute inter-donor differences
donor_diff = region_r_effs(:,1)-region_r_effs(:,2);
donor_diff_mean = mean(donor_diff);
donor_diff_std = std(donor_diff);
donor_diff_norm = donor_diff ./ mean(region_r_effs,2); % region-wise % difference
donor_diff_mean_norm = mean(donor_diff_norm);
donor_diff_std_norm = std(donor_diff_norm);

%% plot results
% set up subplots
fig_handle  = figure;
set(fig_handle, get_default_figure_settings());
set(gcf,'units','centimeters','position',[0, 0, 18.4, 18]);
layout = tiledlayout(3, 2, ...
    "TileSpacing", 'tight', ...
    'Padding', 'tight');
histo_axes = gobjects(3,2);
color_order = get_default_color_order();
face_alphas = [0.2 0.0];
edge_alphas = [1 0.5];
nexttile(layout);
axis off;

% plot axon radius distributions
for region_id_prefix_index = 1:length(region_id_prefixes)
    histo_axes(region_id_prefix_index) = nexttile(layout);
    hold on;
    for subject_index = 1:length(subject_ids)
        histogram(region_radii{region_id_prefix_index, subject_index}, ...
            'BinEdges', r_bin_edges, ...
            'Normalization', 'probability',...
            'LineWidth', 1, ...
            'EdgeColor', color_order(subject_index,:), ...
            'FaceColor', color_order(subject_index,:), ...
            'FaceAlpha', face_alphas(subject_index), ...
            'DisplayName', sprintf("CC-%02d", subject_index));
        box on;
    end
    xlabel("$r [\mu$m$]$", 'Interpreter', 'latex');
    ylabel("probability", 'Interpreter', 'latex');
    pbaspect([1.9 1 1]);
    xticks(0:1:6);
    xlim([0 6]);
    title(sprintf("\\textbf{%s}", region_names(region_id_prefix_index)), ...
        'Interpreter', 'latex');
end
linkaxes(histo_axes( 1:length(region_id_prefixes)), 'xy');

% add common legend only in first subplot
axes(histo_axes(1));
lgd = legend("NumColumns", 2, 'Interpreter', 'latex');
lgd.Location = "NorthOutside";

% add insets for distribution tails
for region_id_prefix_index = 1:length(region_id_prefixes)
    axes(histo_axes(region_id_prefix_index));
    ylims = ylim();
    inset_xlims = [1.5 6];
    inset_ylims = [0.0 ylims(2)/10^2];
    plot_inset(histo_axes(region_id_prefix_index), ...
        [0.48 0.13 0.45 0.45], ...
        inset_xlims, ...
        inset_ylims);
end

% annotate axon count and effective radii after insets (otherwise they
% would be duplicated)
for region_id_prefix_index = 1:length(region_id_prefixes)
    axes(histo_axes(region_id_prefix_index));
    for subject_index = 1:length(subject_ids)
        xline(region_r_effs(region_id_prefix_index, subject_index), ...
            '-', ...
            'LineWidth', 2, ...
            'Color', color_order(subject_index,:), ...
            'DisplayName', sprintf( ...
                "$r_{\\mathrm{eff}} $(CC-%02d)", subject_index));     
        axon_count = ...
            length(region_radii{region_id_prefix_index, subject_index});
        axon_count_str = sprintf("$N = %.1f e^{%d}$",  ...
            axon_count / 10^floor(log10(axon_count)), ...
            floor(log10(axon_count))); 
        text(0.65, ...
            0.72+subject_index*0.1, ...
            sprintf("%s", axon_count_str), ...
            'Color', color_order(subject_index,:), ...
            'Units', 'Normalized', ...
            'interpreter', 'latex'); 
    end
end

% save figure
print(gcf, '-dsvg', "axon_radius_distributions.svg");
 