% ========================================================================
% Investigate effect of realistic immobile water fraction variation on 
% effective radius correlation with histology for experimental ex-vivo 
% dMRI protocol.
% ========================================================================

%% simulation
% load data
load(fullfile(getenv("MRV_DATA_PATH"), ...
    "simulations/signal_per_radius_ex_vivo_experimental_var_immobile_water.mat"));

%% simulation
% get ex-vivo-like axon radius distributions
[r_roi_counts, ...
    r_eff_reference] = get_histology_data(...
    fullfile(getenv("MRV_DATA_PATH")),...
    sim_params.r_bin_edges,...
    sim_params.radius_approximation,...
    "scaling_factor", tissue_params.histology_scaling_factor);

cov = [0.02, 0.05, 0.1];

r_eff_simulated = zeros(length(cov), ...
    size(r_roi_counts, 1), ...
    sim_params.n_noise_realizations);

rand_stream = RandStream(sim_params.random_generator, ...
    'Seed', sim_params.random_seed);

for cov_index = 1:length(cov)
    
    cov_value = cov(cov_index);
    mu = tissue_params.f_im;
    sig2 = log(1 + cov_value^2);
    sig  = sqrt(sig2);
    mul  = log(mu) - 0.5*sig2;
    f_im_dist = makedist('Lognormal', 'mu', mul, 'sigma',sig);
    for iter_index = 1:sim_params.n_noise_realizations
        
        signals_per_roi = zeros(585, size(r_roi_counts, 1));
        for roi_index = 1:size(r_roi_counts, 1)
            
            f_im_bin_idx = nan;
            while (isnan(f_im_bin_idx))
                f_im_val = random(f_im_dist, 1, 1);
                f_im_bin_idx = discretize(f_im_val, f_im_bin_edges);
            end
    
            signals_per_roi(:,roi_index) = compute_ensemble_weighted_signal( ...
                sim_params.r_bin_centers, ...
                r_roi_counts(roi_index,:), ...
                squeeze(signal_per_r(f_im_bin_idx,:,:)));
        end
    
        r_eff_simulated(cov_index,:,iter_index) = ...
        simulate_experimental_r_eff_estimation( ...
            signals_per_roi, ...
            mr_protocol, ...
            tissue_params.d_0, ...
            "noise_type", "gaussian", ...
            "noise_level", 1./mr_protocol.snr, ...
            "powder_average", "gaussian_ml", ...
            "f_im_estimate", tissue_params.f_im, ...
            "n_noise_realizations", 1, ...
            "rand_stream", rand_stream);
    end
end

%% plots
% set up figure
fig_handle  = figure;
set(fig_handle, get_default_figure_settings());
set(gcf,'units','centimeters','position',[0, 0, 18.4, 9.2]);
layout = tiledlayout(1, 3, ...
    'TileSpacing', 'tight', ...
    'Padding','tight');
plot_axes = gobjects(1, 3);
color_order = get_default_color_order();


for cov_index = 1:length(cov)
    % create inner layout to position title above legend
    inner_layout = tiledlayout(layout, 1, 1);
    inner_layout.Layout.Tile = cov_index;
    inner_layout.TileSpacing = "tight";
    inner_layout.Padding = "tight";
    title_text = sprintf("CV = %d %%", ...
        int32(round(100*cov(cov_index))));
    title(inner_layout, title_text, ...
        "FontSize", 10, ...
        'interpreter', 'latex');   
    % plot correlations
    plot_axes(cov_index) = nexttile(inner_layout);
    rand_stream = RandStream(sim_params.random_generator, ...
        'Seed', sim_params.random_seed);
    plot_r_eff_correlation_ensemble(plot_axes(cov_index), ...
        r_eff_reference, ...
        squeeze(r_eff_simulated(cov_index,:,:)), ...
        'color', color_order(4,:), ...
        'xlim', [0 4], ...
        'ylim', [0 4], ...
        'rand_stream', rand_stream);
    xlabel('$r_{\mathrm{eff}}$ [$\mu$m] (histology)', ...
        'Interpreter', 'latex');
    ylabel("$r_{\mathrm{eff}}$ [$\mu$m] (dMRI)", ...
        'Interpreter', 'latex');
    lgd = legend('Interpreter', 'latex', ...
        'Location', 'northoutside', ...
        'FontSize', 7);
    lgd.ItemTokenSize(1) = 18;
end

% save figure
print(gcf, '-dsvg', "immobile_water_variation_ex_vivo.svg");
