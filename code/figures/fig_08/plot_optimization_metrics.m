% ========================================================================
% Plot optimization metrics (Pearson's R, NRMSE) as a function
% of the maximum diffusion gradient amplitude
% ========================================================================

%% extract plot data
% load optimization results
opt = load(fullfile(getenv("MRV_DATA_PATH"), ...
    "/simulations/protocol_optimization_rois.mat"));

% determine optimal R and corresponding NRMSE for each combination of
% g_max and SNR baseline level
g_max = unique(opt.results_table.g_max);
best_nrmse_percent = nan(length(opt.snr_factors), length(g_max));
best_R = nan(length(opt.snr_factors), length(g_max));
for snr_baseline_index = 1:length(opt.snr_factors)   
    for g_max_index = 1:length(g_max)
        
        % find protocol candidates
        roi_idx = abs(opt.results_table.g_max ...
            - g_max(g_max_index)) < 1e-1...
            & abs(opt.results_table.scaling_factor ...
            - opt.tissue_params.histology_scaling_factor) < 1e-3...
            & abs(opt.results_table.snr_factor ...
            - opt.snr_factors(snr_baseline_index)) < 1e-3 ...
            & opt.results_table.p <= inf;
        
        % determine protocol with highest R from candidates
        roi_table = opt.results_table(roi_idx,:);
        [~, best_roi_idx] = max(roi_table.R, [], 'omitnan');
        
        % store R and corresponding NRMSE value
        best_nrmse_percent(snr_baseline_index, g_max_index) = ...
            roi_table.nrmse(best_roi_idx).*100.0;
        best_R(snr_baseline_index, g_max_index) = ...
            roi_table.R(best_roi_idx);          
    end
end


%% plots
% set up figure
fig_handle = figure;
set(fig_handle, get_default_figure_settings());
set(gcf,'units','centimeters','position',[0, 0, 18.4, 8.5]);
layout = tiledlayout(1, 2, ...
    "TileSpacing","tight", ...
    "Padding", "tight");
plot_axes = gobjects(1, 2);
scanner_names = ["state-of-the-art clinical scanner", ...
    "next-generation clinical scanner", ...
    "state-of-the-art research scanner", ...
    "next-generation research scanner"];
g_max_tick_vals = 0:100:600;
next_gen_clinical_index = find(opt.g_max_scanners == 180);
scanner_markers = ["o", "diamond", "v", "^"];
color_order = get_default_color_order();
snr_ref_linestyles = ["-", "--", ":"];
snr_baseline_names = strings(1, length(opt.snr_factors));
for snr_baseline_index = 1:length(opt.snr_factors)
    if opt.snr_factors(snr_baseline_index) == 1
        snr_baseline_names(snr_baseline_index) = "reference";
    else 
        snr_baseline_names(snr_baseline_index) = ...
            sprintf("$%d \\%%$ increased", ...
            round(opt.snr_factors(snr_baseline_index)*100-100));
    end
end

% plot R versus g_max
plot_axes(1) = nexttile(layout);
hold on;
for snr_baseline_index = 1:length(opt.snr_factors)  
    % plot R versus g_max as line
    plot(g_max, best_R(snr_baseline_index,:), ...
        snr_ref_linestyles(snr_baseline_index), ...
        'LineWidth', 1, ...
        'Color', 'k',...
        'DisplayName', sprintf("SNR baseline level: %s", ...
            snr_baseline_names(snr_baseline_index)), ...
        'HandleVisibility', 'on');

    % plot R for existing scanners as markers on line
    for scanner_index = 1:length(opt.g_max_scanners)      
        g_max_index = find(g_max == opt.g_max_scanners(scanner_index));

        handle_visibility = "off";
        if snr_baseline_index == length(opt.snr_factors)
            handle_visibility = "on";
        end
           
        % plot scanner metric as uncolored markers
        plot(opt.g_max_scanners(scanner_index), ...
            best_R(snr_baseline_index,g_max_index), ...
            'o', ...
            'Color', 'k', ...
            'MarkerEdgeColor', 'k', ...
            'MarkerFaceColor', 'w', ...
            'Marker', scanner_markers(scanner_index),...
            'MarkerSize', 8, ...
            'DisplayName', ...
                sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                scanner_names(scanner_index), ...
                opt.g_max_scanners(scanner_index)),...
            'HandleVisibility', handle_visibility); 

          % highlight Cima.X marker in colors
          if (scanner_index == next_gen_clinical_index)
             plot(opt.g_max_scanners(scanner_index), ...
                 best_R(snr_baseline_index,g_max_index), ...
                 'o', ...
                'Color', 'k', ...
                'MarkerEdgeColor', 'k', ...
                'MarkerFaceColor', color_order(snr_baseline_index,:), ...
                'Marker', scanner_markers(scanner_index),...
                'MarkerSize', 8, ...
                'DisplayName', ...
                    sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                    scanner_names(scanner_index), ...
                    opt.g_max_scanners(scanner_index)),...
                'HandleVisibility', 'off'); 
          end
    end
    xlabel("$g_{\mathrm{max}}$", 'Interpreter', 'latex');
    ylabel("$\mathrm{R}$", 'Interpreter', 'latex');
    pbaspect([1.47 1 1]);
    ytick_vals = 0:0.1:1;
    yticks(ytick_vals);
    ylim(minmax(ytick_vals));
    xticks(g_max_tick_vals);
    xlim(minmax(g_max_tick_vals));
    box on;
end

% plot NRMSE versus g_max
plot_axes(2) = nexttile(layout);
hold on;
for snr_baseline_index = 1:length(opt.snr_factors)

    % plot NRMSE versus g_max as line
    plot(g_max, best_nrmse_percent(snr_baseline_index,:), ...
        snr_ref_linestyles(snr_baseline_index), ...
        'LineWidth', 1, ...
        'Color', 'k',...
        'DisplayName', sprintf("SNR baseline level: %s", ...
            snr_baseline_names(snr_baseline_index)), ...
        'HandleVisibility', 'on');

    % plot R for existing scanners as markers on line
    for scanner_index = 1:length(opt.g_max_scanners)      
        g_max_index = find(g_max == opt.g_max_scanners(scanner_index));

        handle_visibility = "off";
        if snr_baseline_index == length(opt.snr_factors)
            handle_visibility = "on";
        end
        
        % plot scanner metrics as uncolored markers
        plot(opt.g_max_scanners(scanner_index), ...
            best_nrmse_percent(snr_baseline_index,g_max_index), ...
            'o', ...
            'Color', 'k', ...
            'MarkerEdgeColor', 'k', ...
            'MarkerFaceColor', 'w', ...
            'Marker', scanner_markers(scanner_index),...
            'MarkerSize', 8, ...
            'DisplayName', ...
                sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                scanner_names(scanner_index), ...
                opt.g_max_scanners(scanner_index)),...
            'HandleVisibility', handle_visibility); 

          % highlight Cima.X marker in colors
          if (scanner_index == next_gen_clinical_index)
             plot(opt.g_max_scanners(scanner_index), ...
                 best_nrmse_percent(snr_baseline_index,g_max_index), ...
                 'o', ...
                'Color', 'k', ...
                'MarkerEdgeColor', 'k', ...
                'MarkerFaceColor', color_order(snr_baseline_index,:), ...
                'Marker', scanner_markers(scanner_index),...
                'MarkerSize', 8, ...
                'DisplayName', ...
                    sprintf("%s ($g_{\\mathrm{max}} = %.2f$ mT/m)", ...
                    scanner_names(scanner_index), ...
                    opt.g_max_scanners(scanner_index)),...
                'HandleVisibility', 'off'); 
          end
    end
    xlabel("$g_{\mathrm{max}}$", 'Interpreter', 'latex');
    ylabel("$\mathrm{NRMSE}~[\%]$", 'Interpreter', 'latex');
    pbaspect([1.47 1 1]);
    ytick_vals = 20:10:90;
    yticks(ytick_vals);
    ylim(minmax(ytick_vals));
    xticks(g_max_tick_vals);
    xlim(minmax(g_max_tick_vals));
    box on;
end

lgd = legend("NumColumns", 2, 'Interpreter','latex');
lgd.ItemTokenSize(1) = 15;
lgd.Layout.Tile = 'North';

% save figure
print(gcf, '-dsvg', "protocol_optimization_metrics.svg");
