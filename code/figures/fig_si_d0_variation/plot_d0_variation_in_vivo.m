% ========================================================================
% Investigate effect of realistic D0 variation on effective radius 
% correlation with histology for optimal next-generation clinical scanner 
% protocols.
% ========================================================================

%% simulation
% load data
load(fullfile(getenv("MRV_DATA_PATH"), ...
    "simulations/signal_per_radius_in_vivo_clinical_var_d0.mat"));

%% simulation
% get in-vivo-like (scaled) axon radius distributions
[r_roi_counts, ...
    r_eff_reference] = get_histology_data(...
    fullfile(getenv("MRV_DATA_PATH")),...
    sim_params.r_bin_edges,...
    sim_params.radius_approximation,...
    "scaling_factor", tissue_params.histology_scaling_factor);

cov = 0.65; % Veraart et al., 2018 (https://doi.org/10.1016/j.neuroimage.2017.09.030) 
mu = tissue_params.d_0;
sig2 = log(1 + cov^2);
sig  = sqrt(sig2);
mul  = log(mu) - 0.5*sig2;
d_0_dist = makedist('Lognormal', 'mu', mul, 'sigma',sig);

r_eff_simulated = zeros(length(mr_protocols), ...
    size(r_roi_counts, 1), ...
    sim_params.n_noise_realizations);

rand_stream = RandStream(sim_params.random_generator, ...
    'Seed', sim_params.random_seed);
states = cell(1, length(mr_protocols));

d_0_vals = zeros(sim_params.n_noise_realizations, ...
    length(mr_protocols), ...
    size(r_roi_counts, 1));
for iter_index = 1:sim_params.n_noise_realizations
    for snr_baseline_index = 1:length(mr_protocols)
    
        signals_per_roi = zeros(180, size(r_roi_counts, 1));
        for roi_index = 1:size(r_roi_counts, 1)
            
            d_0_bin_idx = nan;
            while (isnan(d_0_bin_idx))
                d_0_val = random(d_0_dist, 1, 1);
                d_0_bin_idx = discretize(d_0_val, d_0_bin_edges);
                d_0_vals(iter_index, snr_baseline_index, roi_index) = d_0_val;
            end
    
            signals_per_roi(:,roi_index) = compute_ensemble_weighted_signal( ...
                sim_params.r_bin_centers, ...
                r_roi_counts(roi_index,:), ...
                squeeze(signal_per_r(snr_baseline_index,d_0_bin_idx,:,:)));
        end
    
        r_eff_simulated(snr_baseline_index,:,iter_index) = ...
        simulate_experimental_r_eff_estimation( ...
            signals_per_roi, ...
            mr_protocols{snr_baseline_index}, ...
            tissue_params.d_0, ...
            "noise_type", "gaussian", ...
            "noise_level", 1./mr_protocols{snr_baseline_index}.snr, ...
            "powder_average", "gaussian_ml", ...
            "f_im_estimate", tissue_params.f_im, ...
            "n_noise_realizations", 1, ...
            "rand_stream", rand_stream);
    end
end

%% plots
% set up figure
fig_handle  = figure;
set(fig_handle, get_default_figure_settings());
set(gcf,'units','centimeters','position',[0, 0, 18.4, 8.6]);
layout = tiledlayout(1, length(mr_protocols), ...
    'TileSpacing', 'tight', ...
    'Padding','tight');
plot_axes = gobjects(1, length(mr_protocols));
color_order = get_default_color_order();

% plot simulated versus histological effective radii per SNR baseline level
for snr_baseline_index = 1:length(mr_protocols)

    % create inner layout to position title above legend
    inner_layout = tiledlayout(layout, 1, 1);
    inner_layout.Layout.Tile = snr_baseline_index;
    inner_layout.TileSpacing = "tight";
    inner_layout.Padding = "tight";
    title_text = sprintf("SNR~$\\approx %d$", ...
        int32(round(mr_protocols{snr_baseline_index}.snr)));
    title(inner_layout, title_text, ...
        "FontSize", 10, ...
        'interpreter', 'latex');   
    % plot correlations
    plot_axes(snr_baseline_index) = nexttile(inner_layout);
    rand_stream = RandStream(sim_params.random_generator, ...
        'Seed', sim_params.random_seed);
    plot_r_eff_correlation_ensemble(plot_axes(snr_baseline_index), ...
        r_eff_reference, ...
        squeeze(r_eff_simulated(snr_baseline_index,:,:)), ...
        'color', color_order(snr_baseline_index,:), ...
        'xlim', [0 4], ...
        'ylim', [0 4], ...
        'rand_stream', rand_stream);
    xlabel('$r_{\mathrm{eff}}$ [$\mu$m] (histology)', ...
        'Interpreter', 'latex');
    ylabel("$r_{\mathrm{eff}}$ [$\mu$m] (dMRI)", ...
        'Interpreter', 'latex');
    lgd = legend('Interpreter', 'latex', ...
        'Location', 'northoutside', ...
        'FontSize', 7);
    lgd.ItemTokenSize(1) = 18;
end

% save figure
print(gcf, '-dsvg', "d0_variation_in_vivo.svg");
